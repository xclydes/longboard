plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id("com.apollographql.apollo").version( "2.5.9" )
}

group = 'com.xclydes.finance'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	if (version.contains('-')) {
		maven { url "https://repo.spring.io/milestone" }  // Spring milestones
	}
	if (version.endsWith('-SNAPSHOT')) {
		maven { url "https://repo.spring.io/snapshot" }   // Spring snapshots
	}
}

ext {
	set('springCloudVersion', "2020.0.4")
	set('apolloGraphQlVersion', "2.5.9")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	//implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//implementation 'org.liquibase:liquibase-core'
	//implementation 'org.springframework:spring-jdbc'
	//implementation 'org.springframework.cloud:spring-cloud-starter-function-web'
	//implementation 'org.springframework.cloud:spring-cloud-starter-function-webflux'

	// Spring GraphQL Boot starter
	implementation 'org.springframework.experimental:graphql-spring-boot-starter:1.0.0-SNAPSHOT'

	// Proxy
	//implementation group: 'com.github.mkopylec', name: 'charon-spring-webflux', version: '4.10.0'

	// Upwork
	implementation('com.Upwork:api:1.3.3')

	// Apollo
	// The core runtime dependencies
	implementation("com.apollographql.apollo:apollo-runtime:${apolloGraphQlVersion}")
	implementation "com.apollographql.apollo:apollo-reactor-support:${apolloGraphQlVersion}"

	compileOnly 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
	compileOnly 'org.projectlombok:lombok'

//	runtimeOnly 'dev.miku:r2dbc-mysql'
//	runtimeOnly 'io.r2dbc:r2dbc-postgresql'
//	runtimeOnly 'mysql:mysql-connector-java'
//	runtimeOnly 'org.mariadb:r2dbc-mariadb'
//	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
//	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

apollo {
	// instruct the compiler to generate Kotlin models
	//generateKotlinModels.set(true)
}

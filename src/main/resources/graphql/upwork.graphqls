type UpworkUser {
    id: ID!
    reference: String!
    timezone: String
    status: String
    timezone_offset: String
    public_url: String
    last_name: String
    email: String
    is_provider: String
    first_name: String
    profile_key: String
    profile: UpworkProfile
    has_contract: String
}
type UpworkProfile {
    ciphertext: String
    dev_ac_agencies: String
    dev_adj_score: String
    dev_adj_score_recent: String
    dev_billed_assignments: String
    dev_city: String
    dev_country: String
    dev_eng_skill: String
    dev_groups: String
    dev_is_affiliated: String
    dev_last_activity: String
    dev_last_worked: String
    dev_last_worked_ts: String
    dev_portfolio_items_count: String
    dev_portrait: String
    dev_portrait_100: String
    dev_portrait_32: String
    dev_portrait_50: String
    dev_profile_title: String
    dev_recno_ciphertext: String
    dev_short_name: String
    dev_timezone: String
    dev_tot_feedback: String
    dev_total_hours: String
    dev_ui_profile_access: String
}

type UpworkCompany {
    name: String!
    owner_ciphertext: String
    payment_verification_status: String
    reference: String!
}

type UpworkTeam {
    id: ID!
    name: String!
    reference: String!
    company__reference: String!
    parent_team__reference: String!
    company_name: String
    parent_team__id: String
    parent_team__name: String
    payment_verification_status: String
}
type UpworkTimeRecord {
    worked_on: String!
    week_worked_on: String!
    month_worked_on: String
    year_worked_on: String
    provider_id: String
    provider_name: String
    team_id: String
    team_name: String
    assignment_team_id: String
    assignment_name: String
    assignment_ref: String
    agency_id: String
    agency_name: String
    company_id: String
    task: String
    memo: String
    agency_company_id: String
    hours: Float
    charges: Float
    hours_online: Float
    charges_online: Float
    hours_offline: Float
    charges_offline: Float
}
type UpworkFinanceRecord {
    reference: String!
    type: String!
    subtype: String!
    accounting_entity__reference: String
    accounting_entity_name: String
    buyer_company__reference: String
    buyer_company__id: String
    buyer_company_name: String
    buyer_team__reference: String
    buyer_team__id: String
    buyer_team_name: String
    provider_company__reference: String
    provider_company__id: String
    provider_company_name: String
    provider_team__reference: String
    provider_team__id: String
    provider_team_name: String
    provider__reference: String
    provider__id: String
    provider_name: String
    date: String!
    amount: Float
    description: String
    date_due: String
    assignment__reference: String
    assignment_name: String
    comment: String
    memo: String
    notes: String
    po_number: String
}

type UpworkScreenshot {
    activity: Int!
    screenshot_img_med: String
    screenshot_img: String
    screenshot_img_thmb: String
    has_webcam: String
    webcam_img_thmb: String
    webcam_img: String
    has_screenshot: String
    webcam_url: String
    screenshot_url: String
    screenshot_img_lrg: String
}
type UpworkSnapshotTask {
    code: String
    description: String
    memo: String
    id: String
}
type UpworkSnapshotTime {
    last_worked_int: Int
    tracked_time: Int
    manual_time: Int
    overtime: Int
    first_worked: String
    last_worked: String
    first_worked_int: Int
    last_screenshot: Int
}
type UpworkSnapshot {
    contract_id: String!
    user_id: String!
    duration: String!
    duration_int: Int!
    time: UpworkSnapshotTime
    task: UpworkSnapshotTask
    screenshots: [UpworkScreenshot]
}
type UpworkEngagementPage {
    pagination: PageInfo!
    page: [UpworkEngagementRecord]
}
type UpworkEngagementRecord {
    engagement_start_date: String
    job_ref_ciphertext: String
    status: String
    provider__reference: String
    engagement_job_type: String
    offer_id: String
    job__title: String
    cj_job_application_uid: String
    provider_team__id: String
    job_application_ref: String
    dev_recno_ciphertext: String
    reference: String
    parent_reference: String
    active_milestone: String
    provider__id: String
    engagement_title: String
    created_time: String
    engagement_end_date: String
    provider_team__reference: String
    engagement_start_ts: String
    buyer_team__reference: String
    buyer_team__id: String
    portrait_url: String
    category_uid: String
    category_name: String
    hourly_charge_rate: Float
    weekly_salary_charge_amount: Float
    fixed_charge_amount_agreed: Float
    fixed_price_upfront_payment: Float
    weekly_stipend_hours: Int
    weekly_hours_limit: Int
    engagement_end_ts: String
    is_suspended: String
    is_autopaused: String
    is_paused: String
    feedback: UpworkFeedback
}
type UpworkFeedback {
    feedback_for_provider: UpworkFeedbackScore
    feedback_for_buyer: UpworkFeedbackScore
}
type UpworkFeedbackScore {
    score: String
}
